{"version":3,"sources":["components/TopMenu/TopMenu.js","actions/index.js","constants/ActionTypes.js","components/Control/ControlSearch.js","container/ProductListShowContainer/ProductListShowContainer.js","pages/ProductList/Product.js","container/ProductManagementContainer/components/ProductForm.js","components/Control/ControlSort.js","components/Control/Control.js","container/ProductManagementContainer/components/ProductListItem.js","container/ProductManagementContainer/components/ProductList.js","container/ProductManagementContainer/ProductManagementContainer.js","pages/ProductManagement/ProductManagement.js","container/ProductCartContainer/ProductCartContainer.js","pages/Carts/Carts.js","routes.js","App.js","serviceWorker.js","reducers/products.js","reducers/isDisplayForm.js","reducers/itemEditing.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/carts.js","reducers/index.js","index.js"],"names":["connect","state","carts","props","countCarts","count","Navbar","color","light","expand","NavbarBrand","to","Collapse","navbar","Nav","className","NavItem","NavLink","icon","faShoppingCart","listAllRequest","dispatch","axios","get","then","res","listAll","data","items","type","addItem","item","deleteItem","id","updateStatus","updateItem","addToCart","ControlSearch","onHandleChange","event","setState","keyword","target","value","onSearch","Col","xs","InputGroup","Input","name","this","placeholder","onChange","InputGroupAddon","addonType","Button","onClick","faSearch","Component","actions","ProductListShowContainer","onAddToCart","fetchAllItems","elmProducts","products","filter","product","toLowerCase","indexOf","length","map","index","key","sm","Card","CardImg","top","width","src","imageUrl","alt","CardBody","CardTitle","CardText","price","status","faCartPlus","Container","Row","search","Product","uuidv4","require","ProductForm","onExit","onChangeDisplay","clearItem","onClearItem","onSubmit","preventDefault","onAddItem","itemEditing","onClear","nextProps","clearForm","faTimes","Form","FormGroup","Label","post","put","ControlSort","sortBy","sortValue","onSort","by","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","sort","faCheck","divider","Control","ProductListItem","onDelete","openForm","onGetItem","isDisplayForm","onToggleForm","onUpdateStatus","scope","size","delete","deleteItemRequest","updateStatusRequest","getItem","ProductList","checked","filterName","filterStatus","onFilterTable","filterTable","a","b","Table","bordered","hover","ProductManagementContainer","elmProductFrom","elmProductCreate","faPlusSquare","ProductManagement","ProductCartContainer","onDeleteCart","deleteCart","onDeleteAllCart","deleteAllCart","onIncreaseCart","cart","onIncrease","money","countCart","elmCarts","Carts","routes","path","exact","main","Home","App","showContentMenus","result","route","component","basename","Boolean","window","location","hostname","match","findIndex","forEach","initialState","myReducer","action","push","splice","ids","indexs","id_update","index_update","emty","parseInt","findIndexItem","JSON","parse","localStorage","objCart","setItem","stringify","console","log","indexx","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8b8799c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport './TopMenu.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst TopMenu = (props) => {\r\n    var { carts } = props;\r\n    var countCarts = 0;\r\n    for (var cart of carts) {\r\n        countCarts += cart.count\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand><Link to=\"/\">\r\n                                   Home\r\n                            </Link></NavbarBrand>\r\n                <Collapse navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                                <Link to=\"/products\">\r\n                                    Danh sách sản phẩm\r\n                            </Link>\r\n                            </NavLink>\r\n\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                                <Link to=\"/carts\">\r\n                                    Giỏ hàng<FontAwesomeIcon icon={faShoppingCart} /> ({countCarts})\r\n                            </Link>\r\n                            </NavLink>\r\n\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                                <Link to=\"/products_management\">\r\n                                    Quản lý sản phẩm\r\n                            </Link>\r\n                            </NavLink>\r\n\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        carts: state.carts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TopMenu);","import * as types from './../constants/ActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const listAllRequest = () => {\r\n    return(dispatch) => {\r\n        axios.get('https://shopkoki-db.herokuapp.com/productList').then(res => {\r\n            dispatch(listAll(res.data))\r\n        });\r\n    }\r\n};\r\n\r\n export const listAll = (items) => {\r\n    return {\r\n        type : types.LIST_ALL,\r\n        items\r\n    }\r\n };\r\n\r\nexport const addItemRequest = (item) => {\r\n    return dispatch => {\r\n        axios.post('https://shopkoki-db.herokuapp.com/productList', item).then(res => {\r\n            dispatch(addItem(res.data))\r\n        });\r\n    }\r\n};\r\n\r\n export const addItem = (item) => {\r\n     return {\r\n         type : types.ADD_ITEM,\r\n         item //item:item\r\n     }\r\n };\r\n \r\nexport const deleteItemRequest = (id) => {\r\n    return dispatch => {\r\n        axios.delete(`https://shopkoki-db.herokuapp.com/productList/${id}`).then(res => {\r\n            dispatch(deleteItem(id))\r\n        })\r\n    }\r\n};\r\n\r\n export const deleteItem = (id) => {\r\n     return {\r\n         type : types.DELETE_ITEM,\r\n         id\r\n     }\r\n };\r\n\r\n export const toggleForm = () => {\r\n     return {\r\n         type : types.TOGGLE_FORM\r\n     }\r\n };\r\n\r\n export const updateStatusRequest = (id, item) => {\r\n     return dispatch => {\r\n        axios.put(`https://shopkoki-db.herokuapp.com/productList/${id}`, item).then(res => {\r\n            dispatch(updateStatus(id))\r\n        })\r\n     }\r\n };\r\n\r\n export const updateStatus = (id) => {\r\n     return {\r\n         type : types.UPDATE_STATUS,\r\n         id\r\n     }\r\n };\r\n\r\n export const getItem = (item) => {\r\n     return {\r\n         type : types.GET_ITEM,\r\n         item\r\n     }\r\n };\r\n\r\n export const onClear = () => {\r\n     return {\r\n         type : types.CLEAR_EDIT\r\n     }\r\n };\r\n \r\n export const updateItemRequest = (id, item) => {\r\n     return dispatch => {\r\n        axios.put(`https://shopkoki-db.herokuapp.com/productList/${id}`, item).then(res => {\r\n            dispatch(updateItem(id, item))\r\n        })\r\n     }\r\n };\r\n\r\n export const updateItem = (id, item) => {\r\n     return {\r\n        type: types.UPDATE_ITEM,\r\n        id,\r\n        item\r\n     }\r\n };\r\n\r\n export const filterItem = (filter) => {\r\n     return {\r\n         type: types.FILTER_TABLE,\r\n         filter\r\n     }\r\n };\r\n\r\n export const searchItem = (keyword) => {\r\n     return {\r\n         type: types.SEARCH,\r\n         keyword\r\n     }\r\n };\r\n\r\n export const sortItem = (sort) => {\r\n    return {\r\n        type : types.SORT,\r\n        sort\r\n    }\r\n };\r\n\r\n export const addToCart = (item) => {\r\n     return {\r\n         type : types.ADDTOCART,\r\n         item\r\n     }\r\n };\r\n\r\n export const deleteCart = (product) => {\r\n     return {\r\n         type : types.DELETE_CART,\r\n         product\r\n     }\r\n };\r\n\r\n export const deleteAllCart = () => {\r\n     return {\r\n         type : types.DELETE_ALLCART\r\n     }\r\n };","export const LIST_ALL = 'LIST_ALL';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const GET_ITEM = 'GET_ITEM';\r\nexport const CLEAR_EDIT = 'CLEAR_EDIT';\r\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SORT = 'SORT';\r\nexport const ADDTOCART = 'ADDTOCART';\r\nexport const DELETE_CART = 'DELETE_CART';\r\nexport const DELETE_ALLCART = 'DELETE_ALLCART';","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col } from 'reactstrap';\r\nimport './Control.css';\r\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../../actions/index';\r\n\r\nclass ControlSearch extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n\r\n    onHandleChange = (event) => {\r\n        this.setState({\r\n            keyword: event.target.value\r\n        });\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col xs=\"8\">\r\n                <InputGroup>\r\n                    <Input \r\n                    name = \"keyword\"\r\n                    value = {this.state.keyword}\r\n                    type = \"text\"\r\n                    placeholder = \"Nhập từ khóa\"\r\n                    onChange = {this.onHandleChange}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button onClick = {this.onSearch} type = \"button\" color=\"primary\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                                             Tìm\r\n                                        </Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </Col >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return{\r\n        onSearch : (keyword) => {\r\n            dispatch(actions.searchItem(keyword));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ControlSearch);","import React, { Component } from \"react\";\r\nimport {\r\n    Container, Row, Col, Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button\r\n} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../../actions/index';\r\nimport ControlSearch from './../../components/Control/ControlSearch';\r\nimport './ProductListShowContainer.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ProductListShowContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllItems();\r\n    }\r\n\r\n    onAddToCart = (item) => {\r\n        this.props.onAddToCart(item);\r\n    }\r\n\r\n    render() {\r\n        var {products, keyword} = this.props; //truy xuất được các thành phần trong product thông qua biến state\r\n        //search\r\n        products = products.filter((product) => {\r\n            return product.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\r\n        });\r\n\r\n        var elmProducts;\r\n        if (products.length === 0) {\r\n            elmProducts = <Col><h5>Không có sản phẩm tìm kiếm</h5></Col>\r\n        } else {\r\n            elmProducts = products.map((product, index) => {\r\n                return  <Col key = {index} sm=\"3\">\r\n                    <Card>\r\n                        <CardImg top width=\"100%\"\r\n                            className = \"img\"\r\n                            src={product.imageUrl}\r\n                            alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                            <CardTitle>{product.name}</CardTitle>\r\n                            <CardText>{product.price} $</CardText>\r\n                            {product.status ? <Button onClick = {() => this.onAddToCart(product)} color=\"success\" > Thêm vào giỏ <FontAwesomeIcon icon={faCartPlus} /> </Button> : <CardTitle>Hết hàng</CardTitle>}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            });\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Row className = \"mtop-15\">\r\n                    <Col>\r\n                        <h2>Danh sách sản phẩm</h2>\r\n                    </Col>\r\n                    <ControlSearch />\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    {elmProducts}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products : state.products,\r\n        keyword : state.search,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllItems : () => {\r\n            dispatch(actions.listAllRequest());\r\n        },\r\n        onAddToCart : (item) => {\r\n            dispatch(actions.addToCart(item))\r\n        }\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(ProductListShowContainer);","import React, { Component } from \"react\";\r\nimport ProductListShowContainer from './../../container/ProductListShowContainer/ProductListShowContainer'\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <ProductListShowContainer />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Product;","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col } from 'reactstrap';\r\nimport './../ProductManagementContainer.css';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../actions/index';\r\n\r\n\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nclass ProductForm extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            price : '',\r\n            imageUrl : '',\r\n            status : false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.props.itemEditing && this.props.itemEditing.id!==null) {\r\n            this.setState ({\r\n                id :  this.props.itemEditing.id,\r\n                name : this.props.itemEditing.name,\r\n                price : this.props.itemEditing.price,\r\n                imageUrl : this.props.itemEditing.imageUrl,\r\n                status : this.props.itemEditing.status\r\n            })\r\n        } \r\n        else {\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps && nextProps.itemEditing) {\r\n            this.setState({\r\n                id :  nextProps.itemEditing.id,\r\n                name : nextProps.itemEditing.name,\r\n                price : nextProps.itemEditing.price,\r\n                imageUrl : nextProps.itemEditing.imageUrl,\r\n                status : nextProps.itemEditing.status\r\n            })\r\n        }\r\n        else {\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if(name === 'status') {\r\n            value = target.value ==='true' ? true : false;\r\n        }\r\n        this.setState({\r\n            [name] : value \r\n        });\r\n    };\r\n\r\n    onExit = () => {\r\n        this.props.onChangeDisplay();\r\n        this.clearItem()\r\n    }\r\n\r\n    clearItem = () => {\r\n        this.props.onClearItem()\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.id === '') {\r\n            let id = uuidv4();\r\n            let item = {\r\n                id: id,\r\n                name: this.state.name,\r\n                price : this.state.price,\r\n                imageUrl : this.state.imageUrl,\r\n                status: this.state.status\r\n            }\r\n            this.props.onAddItem(item);\r\n        }\r\n        else {\r\n            let id = this.state.id;\r\n            let item = {\r\n                id : this.state.id,\r\n                name : this.state.name,\r\n                price : this.state.price,\r\n                imageUrl : this.state.imageUrl,\r\n                status : this.state.status\r\n            };\r\n            this.props.updateItem(id, item)\r\n        }\r\n        \r\n        this.props.onClearItem();\r\n    };\r\n\r\n    render() {\r\n        var state = this.state;\r\n        var clearForm = state.id === '' ? <Button onClick={this.clearItem} type=\"button\" color=\"danger\">\r\n        <FontAwesomeIcon className=\"\" icon={faTimes} />\r\n                Hủy bỏ\r\n            </Button> : '';\r\n        return (\r\n            <Col xs=\"4\">\r\n                <div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">\r\n                            {state.id !== '' ? 'Cập nhật sản phẩm' : 'Thêm sản phẩm'}\r\n                        </h3>\r\n                        <Button onClick = {this.onExit} className=\"panel-exit\" color=\"danger\">Thoát</Button>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label>Tên Sản phẩm :</Label>\r\n                                <Input  type=\"text\" \r\n                                        name=\"name\" \r\n                                        value = {state.name}\r\n                                        onChange = {this.onChange}\r\n                                         />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Giá Sản phẩm :</Label>\r\n                                <Input  type=\"number\" \r\n                                        name=\"price\" \r\n                                        value = {state.price}\r\n                                        onChange = {this.onChange}\r\n                                         />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Url hình sản phẩm :</Label>\r\n                                <Input  type=\"text\" \r\n                                        name=\"imageUrl\" \r\n                                        value = {state.imageUrl}\r\n                                        onChange = {this.onChange}\r\n                                         />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Trạng thái :</Label>\r\n                                <Input  type=\"select\" \r\n                                        name=\"status\" \r\n                                        value = {state.status}\r\n                                        onChange = {this.onChange}\r\n                                        >\r\n                                    <option value={true}>Còn hàng</option>\r\n                                    <option value={false}>Hết hàng</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <div className=\"text-center\">\r\n                                <Button type=\"submit\" color=\"success\">lưu lại</Button> &nbsp;\r\n                                {clearForm}\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itemEditing : state.itemEditing\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onAddItem : (item) => {\r\n            dispatch(actions.addItemRequest(item));\r\n        },\r\n        onClearItem : () => {\r\n            dispatch(actions.onClear());\r\n        },\r\n        updateItem : (id, item) => {\r\n            dispatch(actions.updateItemRequest(id, item))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductForm);","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col } from 'reactstrap';\r\nimport './Control.css';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../../actions/index';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ControlSort extends Component {\r\n\r\n    onClick = (sortBy, sortValue) => {\r\n        this.props.onSort({\r\n            by: sortBy,\r\n            value: sortValue\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props.sort);\r\n        return (\r\n            <Col xs=\"auto\">\r\n                <UncontrolledDropdown>\r\n                    <DropdownToggle color=\"primary\" caret>\r\n                        Sắp xếp\r\n                                </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => this.onClick('name', 1)}>\r\n                            Tên từ A-Z &nbsp;\r\n                            {(this.props.sort.by === 'name' && this.props.sort.value === 1) ? <FontAwesomeIcon className=\"\" icon={faCheck} /> : ''}\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={() => this.onClick('name', -1)}>\r\n                            Tên từ Z-A &nbsp;\r\n                            {(this.props.sort.by === 'name' && this.props.sort.value === -1) ? <FontAwesomeIcon className=\"\" icon={faCheck} /> : ''}\r\n\r\n                        </DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem onClick={() => this.onClick('status', 1)}>\r\n                            Trạng thái còn hàng &nbsp;\r\n                            {(this.props.sort.by === 'status' && this.props.sort.value === 1) ? <FontAwesomeIcon className=\"\" icon={faCheck} /> : ''}\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={() => this.onClick('status', -1)}>\r\n                            Trạng thái hết hàng &nbsp;\r\n                            {(this.props.sort.by === 'status' && this.props.sort.value === -1) ? <FontAwesomeIcon className=\"\" icon={faCheck} /> : ''}\r\n                        </DropdownItem>\r\n                    </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sort: state.sort\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSort: (sort) => {\r\n            dispatch(actions.sortItem(sort));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlSort);","import React, { } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row } from 'reactstrap';\r\nimport './Control.css';\r\nimport ControlSearch from './ControlSearch';\r\nimport ControlSort from './ControlSort'\r\n\r\nconst Control = (props) => {\r\n    return (\r\n        <Row className=\"mt-15\">\r\n            <ControlSearch />\r\n            <ControlSort />\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Control;","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../ProductManagementContainer.css';\r\nimport { Button} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {deleteItemRequest} from '../../../actions/index';\r\nimport {updateStatusRequest} from '../../../actions/index';\r\nimport {toggleForm} from '../../../actions/index';\r\nimport {getItem} from '../../../actions/index';\r\n\r\n\r\nclass ProductListItem extends Component {\r\n\r\n    onDelete = () => {\r\n        this.props.deleteItem(this.props.product.id)\r\n    };\r\n\r\n    openForm = () => {\r\n        this.props.onGetItem(this.props.product);\r\n\r\n        if(!this.props.isDisplayForm) {\r\n            this.props.onToggleForm()\r\n        }\r\n    };\r\n\r\n    onUpdateStatus = () => {\r\n        var item = {\r\n            id : this.props.product.id,\r\n            name : this.props.product.name,\r\n            price : this.props.product.price,\r\n            imageUrl : this.props.product.imageUrl,\r\n            status : !this.props.product.status,\r\n        }\r\n        this.props.updateStatus(this.props.product.id, item)\r\n    }\r\n\r\n    render() {\r\n        const {product, index} = this.props\r\n        return (\r\n            <tr>\r\n                <th scope=\"row\">{index}</th>\r\n                <td>{product.name}</td>\r\n                <td>\r\n                     <Button onClick={this.onUpdateStatus} color={product.status === true ? 'success' : 'danger'} size=\"sm\">{product.status === true ? 'Còn hàng' : 'Hết hàng'}</Button>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <Button onClick = {this.openForm} color=\"success\">Sửa</Button> &nbsp;\r\n                    <Button onClick = {this.onDelete} color=\"danger\">Xóa</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isDisplayForm :  state.isDisplayForm\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        deleteItem : (id) => {\r\n            dispatch(deleteItemRequest(id))\r\n        },\r\n        updateStatus :(id, item) => {\r\n            dispatch(updateStatusRequest(id, item))\r\n        },\r\n        onToggleForm : () => {\r\n            dispatch(toggleForm());\r\n        },\r\n        onGetItem : (item) => {\r\n            dispatch(getItem(item));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductListItem);","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col } from 'reactstrap';\r\nimport './../ProductManagementContainer.css';\r\nimport {Input} from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\nimport ProductListItem from './ProductListItem';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../actions/index';\r\n\r\n\r\nclass ProductList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var filter = {\r\n            name : name === 'filterName' ? value : this.state.filterName,\r\n            status : name ==='filterStatus' ? value : this.state.filterStatus\r\n        };\r\n        this.props.onFilterTable(filter);\r\n        this.setState ({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllItems();\r\n    }\r\n\r\n    render() {\r\n        var {products, filterTable, keyword, sort} = this.props;\r\n        //filter\r\n        if(filterTable.name) {\r\n            products = products.filter((product) => {\r\n                return product.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\r\n            });\r\n        }\r\n\r\n        products = products.filter((product)=> {\r\n            if(filterTable.status === -1) {\r\n                return product;\r\n            }else {\r\n                return product.status === (filterTable.status === 1 ? true : false);\r\n            }\r\n        });\r\n\r\n        //search\r\n        products = products.filter((product) => {\r\n            return product.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\r\n        });\r\n\r\n        //sort \r\n        if(sort.by === 'name') {\r\n            products.sort((a, b) => {\r\n                if(a.name > b.name) return sort.value;\r\n                else if (a.name < b.name) return -sort.value;\r\n                else return 0;\r\n            });\r\n        } else {\r\n            products.sort((a, b) => {\r\n                if(a.status > b.status) return -sort.value;\r\n                else if (a.status < b.status) return sort.value;\r\n                else return 0;\r\n            })\r\n        }\r\n\r\n        var elmProducts = products.map((product, index) => {\r\n           return <ProductListItem key={product.id} index={index} product={product} />\r\n        });\r\n\r\n\r\n        return (\r\n            <Row className=\"mt-15\">\r\n                <Col>\r\n                    <Table bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>stt</th>\r\n                                <th>Tên</th>\r\n                                <th>Trạng thái</th>\r\n                                <th>Hành động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\"></th>\r\n                                <td>\r\n                                    <Input onChange = {this.onChange} type=\"text\" name=\"filterName\" id=\"textId\" />\r\n                                </td>\r\n                                <td>\r\n                                    <Input onChange = {this.onChange} id = \"mySelect\" type=\"select\" name=\"filterStatus\">\r\n                                        <option value = \"0\">Hết hàng</option>\r\n                                        <option value = \"1\">Còn hàng</option>\r\n                                        <option value = \"-1\">Tất cả</option>\r\n                                    </Input>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {elmProducts}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products : state.products,\r\n        filterTable : state.filterTable,\r\n        keyword : state.search,\r\n        sort : state.sort\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllItems : () => {\r\n            dispatch(actions.listAllRequest());\r\n        },\r\n        onFilterTable : (filter) => {\r\n            dispatch(actions.filterItem(filter));\r\n        }\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(ProductList);","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './ProductManagementContainer.css';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport ProductForm from './components/ProductForm';\r\nimport Control from './../../components/Control/Control';\r\nimport ProductList from './components/ProductList';\r\nimport {toggleForm} from './../../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductManagementContainer extends Component {\r\n\r\n    render() {\r\n        const {isDisplayForm} = this.props;\r\n        var elmProductFrom = isDisplayForm ? <ProductForm onChangeDisplay={this.props.onChangeDisplay} isDisplayForm={isDisplayForm} /> : '';\r\n        var elmProductCreate = isDisplayForm ? '' : <Button onClick={this.props.onChangeDisplay} color=\"primary\" size=\"lg\">\r\n        <FontAwesomeIcon icon={faPlusSquare} /> &nbsp;\r\n        Thêm sản phẩm\r\n        </Button> ;\r\n        return (\r\n            <Container>\r\n                <div className=\"text-center\">\r\n                    <h1>Quản lý sản phẩm</h1>\r\n                    <hr />\r\n                </div>\r\n                <Row>\r\n                    {elmProductFrom}\r\n                    <Col>\r\n                        {elmProductCreate}\r\n                        <Control/>\r\n                        <ProductList/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isDisplayForm :  state.isDisplayForm\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return{\r\n        onChangeDisplay : () => {\r\n            dispatch(toggleForm());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductManagementContainer);","import React, { Component } from \"react\";\r\nimport ProductManagementContainer from './../../container/ProductManagementContainer/ProductManagementContainer'\r\n\r\nclass ProductManagement extends Component {\r\n    render() {\r\n        return (\r\n            <ProductManagementContainer />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProductManagement;","import React, { Component } from \"react\";\r\nimport {\r\n    Container, Row, Col, Button\r\n} from 'reactstrap';\r\nimport * as actions from './../../actions/index';\r\nimport { Table } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport './ProductCartContainer.css';\r\n//import * as actions from './../../actions/index';\r\n\r\n\r\nclass ProductCartContainer extends Component {\r\n\r\n    onDeleteCart = (product) => {\r\n        this.props.deleteCart(product)\r\n    };\r\n\r\n    onDeleteAllCart = () => {\r\n        this.props.deleteAllCart()\r\n    };\r\n\r\n    onIncreaseCart = (cart) => {\r\n        this.props.onIncrease(cart);\r\n    };\r\n\r\n    render() {\r\n        var { carts } = this.props;\r\n        var money = 0;\r\n        var countCart = 0;\r\n        for (var cart of carts) {\r\n            money += cart.product.price * cart.count;\r\n            countCart  += cart.count;\r\n        }\r\n        var elmCarts = <Col>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Hình ảnh</th>\r\n                        <th>Sản phẩm</th>\r\n                        <th>Giá</th>\r\n                        <th>Số lượng</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        carts.map((cart, index) => {\r\n                            return <tr key = {index}>\r\n                                <th scope=\"row\">{index + 1}</th>\r\n                                <td>\r\n                                    <img src={cart.product.imageUrl} alt=\"Carts\" />\r\n                                </td>\r\n                                <td>\r\n                                    {cart.product.name}\r\n                                </td>\r\n                                <td>\r\n                                    {cart.product.price}\r\n                                </td>\r\n                                <td>\r\n                                    <Button onClick={() => this.onDeleteCart(cart.product)} color=\"danger\" > - </Button> &nbsp;\r\n                                    {cart.count} &nbsp;\r\n                                    <Button onClick={() => this.onIncreaseCart(cart.product)} color=\"success\" > + </Button>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </Col>\r\n\r\n        return (\r\n            <Container>\r\n                <Row className=\"mtop-15\">\r\n                    <Col>\r\n                        <h2>Giỏ hàng ({countCart} sản phẩm)</h2>\r\n                        <h3>Thành tiền : {money} $</h3>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button color=\"primary\">Tiến hành đặt hàng</Button> &nbsp;\r\n                        <Button onClick={this.onDeleteAllCart} color=\"danger\">Xóa tất cả</Button>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    {elmCarts}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        carts: state.carts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        deleteCart: (product) => {\r\n            dispatch(actions.deleteCart(product))\r\n        },\r\n        deleteAllCart: () => {\r\n            dispatch(actions.deleteAllCart())\r\n        },\r\n        onIncrease: (cart) => {\r\n            dispatch(actions.addToCart(cart))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCartContainer);","import React, { Component } from \"react\";\r\nimport ProductCartContainer from '../../container/ProductCartContainer/ProductCartContainer'\r\n\r\nclass Carts extends Component {\r\n    render() {\r\n        return (\r\n            <ProductCartContainer />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carts;","import React from 'react';\r\nimport Products from './pages/ProductList/Product';\r\nimport ProductManagement  from './pages/ProductManagement/ProductManagement';\r\nimport Carts from './pages/Carts/Carts';\r\n\r\nconst routes = [\r\n    {\r\n        path : '/products',\r\n        exact : false,\r\n        main : () => <Products />\r\n    },\r\n\r\n    {\r\n        path : '/carts',\r\n        exact : false,\r\n        main : () => <Carts />\r\n    },\r\n\r\n    {\r\n        path : '/products_management',\r\n        exact : false,\r\n        main : () => <ProductManagement />\r\n    }\r\n]\r\n\r\nexport default routes;","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  HashRouter,\n  //Link,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport TopMenu from './components/TopMenu/TopMenu';\nimport routes from './routes';\n\nconst Home = () => <h2>Home</h2>;\n\nclass App extends Component {\n\n  render() {\n    return (\n      <HashRouter basename = '/'>\n        <div className=\"App.js\">\n          <TopMenu />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            {this.showContentMenus(routes)}\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n\n  showContentMenus = (routes) => {\n    var result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (\n          <Route \n            key = {index}\n            path = {route.path}\n            exact = {route.exact}\n            component = {route.main}\n          />\n        )\n      })\n    }\n    return result;\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from '../constants/ActionTypes';\r\n\r\nvar findIndex = (products, id) => {\r\n    var result = -1;\r\n    products.forEach((products, index) => {\r\n        if(products.id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nvar initialState = [];\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.LIST_ALL:\r\n            state = action.items;\r\n            return [...state];\r\n        \r\n        case types.ADD_ITEM:\r\n            state.push(action.item);\r\n            return [...state];\r\n\r\n        case types.DELETE_ITEM:\r\n            var id = action.id;\r\n            var index = findIndex(state, id);\r\n            state.splice(index, 1);\r\n            return [...state];\r\n\r\n        case types.UPDATE_STATUS:\r\n            var ids = action.id;\r\n            var indexs = findIndex(state, ids);\r\n            state[indexs] = {\r\n                ...state[indexs],\r\n                status: !state[indexs].status\r\n            };\r\n            return [...state];\r\n\r\n        case types.UPDATE_ITEM :\r\n            var id_update = action.id;\r\n            var index_update = findIndex(state, id_update);\r\n            var item = action.item;\r\n            state[index_update] = {\r\n                id : item.id,\r\n                name : item.name,\r\n                price : item.price,\r\n                imageUrl : item.imageUrl,\r\n                status : item.status\r\n            }\r\n            return [...state];\r\n\r\n        default:\r\n            return [...state];\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_FORM:\r\n            return !state;\r\n        \r\n        default : return state;\r\n    }\r\n};  \r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    id : '',\r\n    name : '',\r\n    imageUrl : '',\r\n    status : false\r\n};\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.GET_ITEM:\r\n            state = action.item;\r\n            return state;\r\n\r\n        case types.CLEAR_EDIT:\r\n            var emty = {\r\n                id : '',\r\n                name : '',\r\n                price : '',\r\n                imageUrl : '',\r\n                status : true\r\n            }\r\n            state = emty;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    name : '',\r\n    status : -1\r\n};\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.FILTER_TABLE:\r\n            return {\r\n                name: action.filter.name,\r\n                status : parseInt(action.filter.status, 10)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = '';\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SEARCH:\r\n            return action.keyword;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    by : 'name',\r\n    value : 1 //1 tang -1 giam\r\n};\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SORT:\r\n            return {\r\n                by :  action.sort.by,\r\n                value : action.sort.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes';\r\n\r\nvar findIndexItem = (carts, item) => {\r\n    var result = -1;\r\n    carts.forEach((carts, index) => {\r\n        if(carts.product.id === item.id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n \r\n\r\nvar data = JSON.parse(localStorage.getItem('items'));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer  = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.ADDTOCART:\r\n            let index = findIndexItem(state, action.item);\r\n            if (index === -1) {\r\n                let objCart = {\r\n                    product : action.item,\r\n                    count : 1\r\n                };\r\n                state.push(objCart)\r\n            } else {\r\n                state[index] = {\r\n                    ...state[index],\r\n                    count : state[index].count + 1\r\n                }\r\n            }\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            console.log(state);\r\n            return [...state];\r\n\r\n        case types.DELETE_CART :\r\n            let indexx = findIndexItem(state, action.product);\r\n            if (state[indexx].count === 1){\r\n                state.splice(indexx, 1);\r\n            } else {\r\n                state[indexx] = {\r\n                    ...state[indexx],\r\n                    count : state[indexx].count - 1\r\n                }\r\n            }\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n\r\n        case types.DELETE_ALLCART : \r\n            state.splice(0);\r\n            localStorage.setItem('items', JSON.stringify(state));\r\n            return [...state];\r\n        \r\n        default:\r\n            return [...state];\r\n    }\r\n};\r\n\r\nexport default myReducer;","import {combineReducers} from 'redux';\r\nimport products from './products';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport itemEditing from './itemEditing';\r\nimport filterTable from './filterTable';\r\nimport search from './search';\r\nimport sort from './sort';\r\nimport carts  from './carts';\r\n\r\nconst myReducer = combineReducers({\r\n    products,\r\n    isDisplayForm,\r\n    itemEditing,\r\n    filterTable,\r\n    search,\r\n    sort,\r\n    carts\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware} from 'redux'; \nimport myReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(myReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}